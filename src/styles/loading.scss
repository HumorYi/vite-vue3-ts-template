@use 'sass:math';

$duration-spin: 0.5s;
$duration-spinner: 1.2s;

@mixin g-set-animation(
  $name,
  $duration: 0.8s,
  $timing-function: ease,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: both
) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing-function;
  animation-iteration-count: $iteration-count;
  animation-direction: $direction;
  animation-fill-mode: $fill-mode;
}

@mixin g-fade-out() {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@mixin g-spin($isLeft: true) {
  $dir: if($isLeft, 1, -1);

  from {
    transform: rotate(0);
    opacity: 0.2;
  }

  50% {
    transform: rotate($dir * 180deg);
    opacity: 1;
  }

  to {
    transform: rotate($dir * 360deg);
    opacity: 0.2;
  }
}

@keyframes spinner {
  @include g-fade-out;
}

@keyframes spin-left {
  @include g-spin;
}

@keyframes spin-right {
  @include g-spin(false);
}

.g-spin-left {
  @include g-set-animation(spin-left, $duration-spin, linear, infinite);
}

.g-spin-right {
  @include g-set-animation(spin-right, $duration-spin, linear, infinite);
}

.g-spinner {
  @include g-set-animation(spinner, $duration-spinner, linear, infinite);
}

.g-mask {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 400;
  width: 100%;
  height: 100%;
  background-color: rgb(0 0 0 / 40%);

  &.fixed {
    position: fixed;
    z-index: 10000;
  }
}

%g-poa {
  position: absolute;
}

.g-por {
  position: relative;
}

.g-pof {
  position: fixed;
}

.g-poa-center,
.g-poa-center-before,
.g-poa-center-before::before {
  @extend %g-poa;

  top: 50%;
  left: 50%;
  z-index: 400;
  transform: translate(-50%, -50%);
}

#g-loading-wrap {
  z-index: 20000;
}

.g-loading {
  $color: #4d75ff;

  .g-loading-outer,
  .g-loading-inner {
    box-sizing: border-box;
    border: 5px solid var(--color);
    border-top-color: transparent;
    border-bottom-color: transparent;
    border-radius: 50%;
    opacity: 0.9;
  }

  .g-loading-outer {
    $size: 60px;

    margin: 0 auto;
    width: $size;
    height: $size;
  }

  .g-loading-inner {
    $size: 40px;

    position: absolute;
    top: 10px;
    left: calc(50% - 20px);
    width: $size;
    height: $size;
  }

  .g-loading-message {
    margin-top: 10px;
    color: $color;
  }
}

.g-loading-spinner {
  $color: #062b4e;
  $size: 40px;
  $step: 0.1s;
  $deg: 30deg;
  $total: 12;

  .g-loading-spinner-list {
    z-index: 10000;
    margin: 0 auto;
    width: $size;
    height: $size;
    border-radius: 50%;

    li {
      display: block;
      background-color: #bdcbd8;
      transform-origin: math.div($size, 2) math.div($size, 2);

      &::after {
        position: absolute;
        left: math.div($size, 2);
        display: block;
        width: 4px;
        height: 12px;
        border-radius: 20%;
        background-color: $color;
        content: ' ';
      }

      @for $i from 1 through $total {
        &:nth-child(#{$i}) {
          transform: rotate(($i - 1) * $deg);
          animation-delay: -$duration-spinner + $step * $i;
        }
      }
    }
  }

  .g-loading-spinner-message {
    margin-top: 10px;
    color: $color;
  }
}
